{"version":3,"sources":["components/Datepicker/Header/index.jsx","components/Datepicker/MonthChangeButton/index.jsx","components/Datepicker/Select/index.jsx","components/Datepicker/Option/index.jsx","utils/calendar.js","components/Datepicker/index.jsx","components/RadioButtonsForm/index.jsx","components/InputsForm/index.jsx","App.jsx","styled.js","index.js"],"names":["Header","children","MonthChangeButton","onClick","disabled","Select","onChange","value","Option","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","years","monthNames","weekDayNames","areEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","Datepicker","Function","prototype","type","calendar","useState","setDate","startDate","setStartDate","endDate","setEndDate","selectedDates","setSelectedDates","useEffect","monthData","fillSelectedDates","milisecondsInDay","getTime","t","prev","className","event","target","map","name","index","length","week","classNames","some","selectedDate","every","handleDayClick","RadioButtonsForm","onChangeValue","e","defaultChecked","InputsForm","start","end","ranges","range","App","setType","toLocaleDateString","handleChange","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4e82cc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Header = ({ children }) => (\r\n    <div>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\n    \r\nexport default Header;","import PropTypes from 'prop-types';\r\n\r\nconst MonthChangeButton = ({ onClick, disabled, children }) => (\r\n    <button\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nMonthChangeButton.propTypes = {\r\n    onClick: Function.prototype,\r\n    disabled: PropTypes.bool,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default MonthChangeButton;","import PropTypes from 'prop-types';\r\n\r\nconst Select = ({ onChange, value, children }) => (\r\n    <select\r\n        value={value}\r\n        onChange={onChange}\r\n    >\r\n        {children}\r\n    </select>\r\n);\r\n\r\nSelect.propTypes = {\r\n    onChange: Function.prototype,\r\n    value: PropTypes.number,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Select;","import PropTypes from 'prop-types';\r\n\r\nconst Option = ({ value, children }) => (\r\n    <option value={value}>{children}</option>\r\n);\r\n\r\nOption.propTypes = {\r\n    value: PropTypes.number,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Option;","const DAYS_IN_WEEK = 7;\r\n\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\r\n\r\nconst Month = {\r\n    January: 0,\r\n    February: 1,\r\n    March: 2,\r\n    April: 3,\r\n    May: 4,\r\n    June: 5,\r\n    July: 6,\r\n    August: 7,\r\n    September: 8,\r\n    October: 9,\r\n    Novermber: 10,\r\n    December: 11\r\n};\r\n\r\nexport const years = [\r\n    2000,\r\n    2001,\r\n    2002,\r\n    2003,\r\n    2004,\r\n    2005,\r\n    2006,\r\n    2007,\r\n    2008,\r\n    2009,\r\n    2010,\r\n    2011,\r\n    2012,\r\n    2013,\r\n    2014,\r\n    2015,\r\n    2016,\r\n    2017,\r\n    2018,\r\n    2019,\r\n    2020,\r\n    2021,\r\n    2022,\r\n    2023,\r\n    2024,\r\n    2025,\r\n];\r\n\r\nexport const monthNames = [\r\n    'Січень',\r\n    'Лютий',\r\n    'Березень',\r\n    'Квітень',\r\n    'Травень',\r\n    'Червень',\r\n    'Липень',\r\n    'Серпень',\r\n    'Вересень',\r\n    'Жовтень',\r\n    'Листопад',\r\n    'Грудень',\r\n];\r\n\r\nexport const weekDayNames = [\r\n    'Пн',\r\n    'Вт',\r\n    'Ср',\r\n    'Чт',\r\n    'Пт',\r\n    'Сб',\r\n    'Нд',\r\n];\r\n\r\nexport function areEqual(a, b) {\r\n    if (!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport function isLeapYear(year) {\r\n    return !((year % 4) || (!(year % 100) && (year % 400)));\r\n}\r\n\r\nexport function getDaysInMonth(date) {\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const daysInMonth = DAYS_IN_MONTH[month];\r\n    \r\n    if (isLeapYear(year) && month === Month.February) {\r\n        return daysInMonth + 1;\r\n    } else {\r\n        return daysInMonth;\r\n    }\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n    const dayOfWeek = date.getDay();\r\n\r\n    return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const monthStartsOn = getDayOfWeek(date);\r\n    let day = 1;\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\r\n        result[i] = [];\r\n        \r\n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n            if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n                result[i][j] = undefined;\r\n            } else {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport MonthChangeButton from './MonthChangeButton';\r\nimport Select from './Select';\r\nimport Option from './Option';\r\nimport * as calendar from '../../utils/calendar';\r\n\r\n\r\nconst Datepicker = ({\r\n    onChange = Function.prototype,\r\n    type,\r\n    years = calendar.years,\r\n    monthNames = calendar.monthNames,\r\n    weekDayNames = calendar.weekDayNames,\r\n}) => {\r\n    \r\n    const [date, setDate] = useState(new Date());\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [selectedDates, setSelectedDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        onChange(startDate, endDate);\r\n    }, [startDate, endDate, onChange]);\r\n\r\n    useEffect(() => {\r\n        setSelectedDates([]);\r\n        setStartDate(null);\r\n        setEndDate(null);\r\n    },[type])\r\n\r\n    const monthData = calendar.getMonthData(date.getFullYear(), date.getMonth());\r\n\r\n    const handlePrevMonthButtonClick = () => {\r\n        setDate(new Date(date.getFullYear(), date.getMonth() - 1));\r\n    };\r\n\r\n    const handleNextMonthButtonClick = () => {\r\n        setDate(new Date(date.getFullYear(), date.getMonth() + 1));\r\n    };\r\n\r\n    const handleSelectYearChange = (event) => {\r\n        const year = event.target.value;\r\n        setDate(new Date(year, date.getMonth()));\r\n    };\r\n\r\n    const handleSelectMonthChange = (event) => {\r\n        const month = event.target.value;\r\n        setDate(new Date(date.getFullYear(), month));\r\n    };\r\n    \r\n    const fillSelectedDates = (startDate, endDate) => {\r\n        const milisecondsInDay = 86400000;\r\n        if (startDate.getTime() < endDate.getTime()) {\r\n            for (let t = startDate.getTime(); t <= endDate.getTime(); t += milisecondsInDay) {\r\n                setSelectedDates(prev => [...prev, new Date(t)])\r\n            }\r\n        } else {\r\n            for (let t = endDate.getTime(); t <= startDate.getTime(); t += milisecondsInDay) {\r\n                setSelectedDates(prev => [...prev, new Date(t)])\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDayClick = date => {\r\n        if (type && type === 'simple') {\r\n            if (calendar.areEqual(date, startDate)) {\r\n                setStartDate(null);\r\n                return;\r\n        }\r\n            setStartDate(date);\r\n        }\r\n        if (type && type === 'range') {\r\n            if (startDate === null) {\r\n                setStartDate(date);\r\n            }\r\n            if (startDate !== null && (date.getTime() === startDate.getTime())) {\r\n                setStartDate(null);\r\n                setEndDate(null);\r\n                setSelectedDates([]);\r\n            }\r\n            if (startDate !== null && (date.getTime() !== startDate.getTime()) && endDate === null) {\r\n                setEndDate(date);\r\n                fillSelectedDates(startDate, date);\r\n            }\r\n            if (startDate !== null && endDate !== null && (startDate && date.getTime() !== startDate.getTime())\r\n                && selectedDates.every(selectedDate => (selectedDate.getTime() !== date.getTime()))) {\r\n                    setStartDate(date);\r\n                    setEndDate(null);\r\n                    setSelectedDates([]);\r\n            }\r\n            if (startDate !== null && endDate !== null && (startDate && date.getTime() !== startDate.getTime())\r\n                && selectedDates.some(selectedDate => selectedDate.getTime() === date.getTime())) {\r\n                    setSelectedDates([]);\r\n                    setEndDate(date);\r\n                    fillSelectedDates(startDate, date);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <Header>\r\n                <MonthChangeButton\r\n                    onClick={handlePrevMonthButtonClick}\r\n                    disabled={date.getFullYear() === years[0] && date.getMonth() === 0}\r\n                >\r\n                    {'<'}\r\n                </MonthChangeButton>\r\n                <Select\r\n                    value={date.getMonth()}\r\n                    onChange={handleSelectMonthChange}\r\n                >\r\n                    {monthNames.map((name, index) =>\r\n                        <Option key={name} value={index} >\r\n                            {name}\r\n                        </Option>\r\n                    )}\r\n                </Select>\r\n                <Select\r\n                    value={date.getFullYear()}\r\n                    onChange={handleSelectYearChange}\r\n                >\r\n                    {years.map(year =>\r\n                        <Option key={year} value={year} >\r\n                            {year}\r\n                        </Option>\r\n                    )}\r\n                </Select>\r\n                <MonthChangeButton\r\n                    onClick={handleNextMonthButtonClick}\r\n                    disabled={date.getFullYear() === years[years.length - 1] && date.getMonth() === 11}\r\n                >\r\n                    {'>'}\r\n                </MonthChangeButton>\r\n            </Header>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {weekDayNames.map(name =>\r\n                            <th key={name}>{name}</th>\r\n                        )}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {monthData.map((week, index) =>\r\n                        <tr key={index} className=\"week\">\r\n                            {week.map((date, index) => date ?\r\n                                <td\r\n                                    key={index}\r\n                                    className={classNames('day', {\r\n                                        'today': calendar.areEqual(date, new Date()),\r\n                                        'selected': calendar.areEqual(date, startDate) || selectedDates.some(selectedDate => calendar.areEqual(date, selectedDate))\r\n                                    })}\r\n                                    onClick={() => handleDayClick(date)}\r\n                                >{date.getDate()}</td>\r\n                                :\r\n                                <td key={index} />\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nDatepicker.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    type: PropTypes.string,\r\n    years: PropTypes.oneOf([2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025]),\r\n    monthNames: PropTypes.oneOf(['Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень']),\r\n    weekDayNames: PropTypes.oneOf(['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Нд']),\r\n}\r\n\r\nexport default Datepicker;","import PropTypes from 'prop-types';\r\n\r\nconst RadioButtonsForm = ({ onChange }) => {\r\n\r\n    const onChangeValue = (e) => {\r\n        onChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='radiobuttons-form' onChange={(e) => onChangeValue(e)}>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    value=\"simple\"\r\n                    name=\"type\"\r\n                    defaultChecked\r\n                />\r\n                Simple\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    value=\"range\"\r\n                    name=\"type\"\r\n                />\r\n                Range\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    value=\"multirange\"\r\n                    name=\"type\"\r\n                />\r\n                Multirange\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nRadioButtonsForm.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RadioButtonsForm;","import PropTypes from 'prop-types';\r\n\r\nconst InputsForm = ({ type, start, end, ranges }) => {\r\n    \r\n    if (type === 'simple') {\r\n        return (\r\n            <div className='inputs'>\r\n                <input disabled value={start} />        \r\n            </div>\r\n        );\r\n    }\r\n\t\t\t\t\r\n\tif (type === 'range') {  \r\n        return (\r\n            <div className='inputs'>\r\n                <input disabled value={start} />\r\n                __\r\n                <input disabled value={end} />\r\n            </div>\r\n        );\r\n\t}\r\n\r\n    if (type === 'multirange') {\r\n        return (\r\n            <>\r\n                {ranges.map((range) => range ?\r\n                    <div className='inputs' key={range}>\r\n                        <input disabled value={start} />\r\n                        __\r\n                        <input disabled value={start} />\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nInputsForm.propTypes = {\r\n    type: PropTypes.string,\r\n    start: PropTypes.string,\r\n    end: PropTypes.string,\r\n    ranges: PropTypes.array,\r\n}\r\n\r\nexport default InputsForm;","import { useState } from 'react';\nimport Datepicker from './components/Datepicker';\nimport RadioButtonsForm from './components/RadioButtonsForm';\nimport InputsForm from 'components/InputsForm';\n\nconst App = () => {\n\tconst [startDate, setStartDate] = useState(null);\n\tconst [endDate, setEndDate] = useState(null)\n\tconst [type, setType] = useState('simple');\n\tconst ranges = [1, 2, 3];\n\t\n\tconst handleChange = (startDate, endDate) => {\n\t\tif (type === 'simple') {\n\t\t\tsetStartDate(startDate);\n\t\t}\n\t\tif (type === 'range') {\n\t\t\tif (startDate && endDate && startDate.getTime() > endDate.getTime()) {\n\t\t\t\tsetStartDate(endDate);\n\t\t\t\tsetEndDate(startDate);\n\t\t\t} else {\n\t\t\t\tsetStartDate(startDate);\n\t\t\t\tsetEndDate(endDate);\n\t\t\t}\n\t\t}\n\t\tif (type === 'multirange') {\n\t\t//\tTODO:  додати логіку для мультирендж\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<RadioButtonsForm\n\t\t\t\tonChange={(type) => setType(type)}\n\t\t\t/>\n\n\t\t\t<InputsForm\n\t\t\t\ttype={type}\n\t\t\t\tstart={startDate\n\t\t\t\t\t? startDate.toLocaleDateString()\n\t\t\t\t\t: '--.--.----'\n\t\t\t\t}\n\t\t\t\tend={endDate\n\t\t\t\t\t? endDate.toLocaleDateString()\n\t\t\t\t\t: '--.--.----'\n\t\t\t\t}\n\t\t\t\tranges={ranges}\n\t\t\t/>\n\n\t\t\t<Datepicker\n\t\t\t\tonChange={(startDate, endDate) => handleChange(startDate, endDate)}\n\t\t\t\ttype={type}\n\t\t\t/>\n\n\t\t</div>\n\t);\n\n}\n\nexport default App;","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: dodgerblue;\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nbutton,\ninput,\nselect {\n  height: 2em;\n  font-size: 1rem;\n  background-color: #fff;\n  color: #363636;\n  border: 1px solid #dbdbdb;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:focus,\ninput:focus,\nselect:focus {\n  outline: none;\n}\n\nbutton {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.25em 0.75em;\n  text-align: center;\n}\n\nbutton[disabled] {\n  background-color: #dbdbdb;\n}\n\nselect,\ninput {\n  padding: 0.25em 0.5em;\n}\n\ninput {\n  max-width: 40%;\n}\n\n.App {\n  max-width: 320px;\n  padding: 10px;\n  border: 2px solid #0081ff;\n  border-radius: 20px;\n  background-color: #ffffff;\n}\n\n.radiobuttons-form {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 10px;\n}\n\n.inputs {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.calendar div {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 8px;\n}\n\n.calendar div button,\n.calendar div select {\n  margin: 0 4px;\n}\n\n.calendar table {\n  table-layout: fixed;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin: auto;\n}\n\n.calendar th {\n  vertical-align: middle;\n  text-align: center;\n  height: 36px;\n}\n\n.calendar .day {\n  padding: 4px 8px;\n  vertical-align: middle;\n  text-align: center;\n  border: 2px solid transparent;\n  border-radius: 10px;\n}\n\n.calendar .day:hover {\n  background-color: #eaeaea;\n  cursor: pointer;\n}\n\n.calendar .day.selected {\n  border: 2px solid dodgerblue;\n}\n\n.calendar .day.today {\n  background-color: dodgerblue;\n  color: white;\n}\n\n.calendar .day.today:hover {\n  background-color: #0081ff;\n}\n\n.calendar .day.today.selected {\n  border: 2px solid lightgray;\n}\n`\n\nexport default GlobalStyle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport GlobalStyle from './styled';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}